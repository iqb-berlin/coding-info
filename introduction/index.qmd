---
lang: de
title: Einführung
---

An dieser Stelle soll ein Grundverständnis für die an der Kodierung beteiligten IQB-Programmierungen erfolgen. Mehr Details sind den nachfolgenden Kapiteln zu entnehmen.

## Der Schemer

Bei der Aufgabenerstellung im Studio werden Frageelemente in einer Unit angeordnet. Die Beantwortung dieser Frageelemente erzeugt Antwortwerte. Um Schlussfolgerungen hinsichtlich der Bewertung einer Antwort zu ziehen, werden die Antwortwerte Kategorien zugeordnet. Im einfachsten Fall gibt es die Kategorien richtig und falsch, sowie Kategorien für fehlende Werte. Die Zuordnung erfolgt durch die Erstellung von Regeln und Instruktionen. Diese sagen dann ganz grob ausgedrückt, diese Antwort ist falsch, diese Antwort ist richtig. Zur Erststellung solcher Regeln und Instruktion wird ein Verona-Modul mit dem Namen: **Schemer** verwendet.

[Hier](https://github.com/iqb-berlin/coding-components) geht es zum GitHub-Repository der Schemer Programmierungen.

#### Bedienung

Das Schemer-Modul wird in das IQB-Studio eingebunden und kann über den Reiter: **Kodierung** bedient werden. Mehr zur Bedienung des Schemers ist [hier](https://iqb-berlin.github.io/tba-info/Studio/Kodierschema/) zu finden.

#### Datenstruktur

Die im Schemer definierten Regeln und Instruktionen werden in einer bestimmten Datenstruktur hinterlegt. Die Datenstruktur richtet sich nach einer Spezifikation. Diese ist [hier](https://iqb-berlin.github.io/responses/) unter **coding-scheme@iqb-standard@3.2/variableCodings** zu finden. Mehr zu den hier hinterlegten Variablen, deren Bedeutung und Zustandsmöglichkeiten ist [hier](https://iqb-berlin.github.io/coding-info/data-structures/coding-scheme.html) nachzulesen. 

#### Output/Input des Schemers

Nach dem Export einer Unit durch das IQB-Studio werden automatisch die zugehörigen Instruktionen und Kodierregeln in einer VOCS-Datei ausgegeben. Die zuvor beschriebene Datenstruktur ist in dieser Datei wiederzufinden. Anschließend kann diese Datei in weitere Anwendungen geladen werden.

**IQB-Testcenter:**

Im Testcenter werden Kodierregeln für das adaptive Testen benötigt. Die VOCS-Datei wird dazu einfach als Ressource zu einer Unit in das Testcenter geladen.

**Kodierbox:**

In die Kodierbox werden Antworten und Logs aus dem Testcenter, plus des zugehörigen Kodierschemas (VOCS-Dateien) geladen. Die eigentliche Kodierung der Antworten erfolgt dann anhand dieser Daten und des Autocoders.

**IQB-Studio**

Sobald im Studio Kodierregeln erstellt und gespeichert wurden, kann im Reiter: "Vorschau" die Funktion der Kodierregeln überprüft werden. Ist die Funktion der Kodieranweisung sichergestellt, können diese aus dem Studio exportiert werden.

## Autocoder

Der Autocoder ist ein Sammelsurium an Klassen und Interfaces, die für die Kodierung notwendig sind. Sowohl die Kodierbox als auch die Kodiervorschau im Studio benötigt diese Klassen und Interfaces. [Hier](https://github.com/iqb-berlin/responses) geht es zum entsprechenden GitHub-Repository.

## Kodierbox

Hier findet die eigentliche Kodierung der Antworten mit Hilfe der Antwortdaten aus dem Testcenter und dem Kodierschema statt. Um die Kodierung zu prüfen, können die Antworten in einem sogenannten Replay-Modus wiedergegeben werden. Nach dem ersten Autocoder-Lauf wird eine Kodierliste für manuell zu kodierende Fälle erzeugt. In naher Zukunft wird diese Liste der IEA vorgelegt und zu einem späteren Zeitpunkt werden IQB-intern die manuellen Fälle von den Kodierer\*innen bewertet. Im Anschluss an die manuelle Kodierung erfolgt ein zweiter Autocoder-Lauf, welcher dann einen primären Datensatz erzeugt. Dieser kann exportiert werden und für weitere wissenschaftliche Erkenntnisse transformiert und ausgewertet werden.

[Hier](https://github.com/iqb-berlin/coding-box) geht es zum GitHub-Repo der Kodierbox Programmierungen.
