---
lang: de
title: Datenstruktur "Antwort"
---

Die Spezifikation in englischer Sprache finden Sie [hier](https://iqb-berlin.github.io/responses).

# Übersicht

| Parameter | erforderlich | Beschreibung / mögliche Werte | Beispiele |
|--|:-:|------------------|:--:|
| id | x | String; identifiziert die Variable innerhalb der Unit; zulässig: `^[0-9a-zA-Z_]+$` | "01a" |
| status | x | String aus einer Aufzählung; s. u. | "NOT_REACHED" |
| value | x | kann verschiedene Datentypen annehmen, s. u. | ["9", null] |
| subform | - | String; wird benutzt, um das ggf. mehrfache Auftreten der Variablen (z. B. in Kopien bei Unterformularen) zu kennzeichnen | "p01" |
| code | - | Integer; steht für die zutreffende Kategorie entspr. Kodierschema | 2 |
| score | - | Integer; steht für die Bewertung des Codes, also die Übereinstimmung mit einer als "richtig" angenommenen Antwort | 0 |

# Status

Der Status-Wert übernimmt eine wichtige Anzeigefunktion für die Position einer Antwort im Entstehungs- und Verarbeitungsprozess. Die Datenstruktur wird nicht nur bei der Beantwortung der Testitems oder Fragen im Player genutzt, sondern auch während der Kodierung und Ableitung von neuen Variablen.

| Wert | Beschreibung |
|--|-------------|
|`UNSET`|Ausgangszustand beim Anlegen von Variablen. Sollte eine Variable an ein Interaktionselement gebunden sein, dann erhält sie jedoch sofort den Status `NOT_REACHED`.|
|`NOT_REACHED`|Ausgangszustand beim Anlegen von Variablen, die an ein Interaktionselement gebunden sind.|
|`DISPLAYED`|Variablen, die an ein Interaktionselement gebunden sind, bekommen diesen Status, wenn sie der Testperson präsentiert wurden - also sichtbar sind.|
|`PARTLY_DISPLAYED`|Diesen Zustand erhalten abgeleitete Variablen, die von Variablen abgeleitet wurden mit dem Status `PARTLY_DISPLAYED` oder mit `DISPLAYED` sowie außerdem den Status `NOT_REACHED` oder `UNSET`.|
|`VALUE_CHANGED`|Dieser Status zeigt an, dass eine Interaktion stattgefunden hat und also der Wert (Value) auszuwerten ist. Bei abgeleiteten Variablen zeigt dieser Status eine erfolgreiche Ableitung an.|
|`DERIVE_ERROR`|Dieser Status zeigt an, dass eine Ableitung fehlgeschlagen ist. Dies kann sich beispielsweise auf einen Typkonflikt (numerisch, Text) beziehen und ist in den meisten Fällen über eine Anpassung des Kodierschemas korrigierbar. Der Status bezieht sich allerdings nicht darauf, ob die zugrundeliegenden Variablen einen unzureichenden Status haben ([s. unten](#status-bei-ableitung)), sondern es geht um technische Fehler beim Ableitungsprozess.|
|`NO_CODING`|Bei diesem Status hat eine Kodierprozedur festgestellt, dass keine Informationen für eine Kodierung vorliegen (keine Codes im Kodierschema definiert). Das kann ein Fehler sein, aber es kann sich auch um offene Antworten handeln, die über andere Wege kodiert werden sollen (z. B. Rating oder Übersetzung in Berufe-Codes außerhalb der regulären Kodierprozesse).|
|`INVALID`|Es wurde bei diesem Status eine Antwort festgestellt, die außerhalb des zulässigen Bereiches liegt. Beispielsweise wurde zwar zunächst ein Text eingegeben, dann aber alles gelöscht, so dass eine leere Antwort gespeichert wurde. Mit diesem Code werden auch Spaßantworten "Mir ist langweilig" kodiert.|
|`CODING_INCOMPLETE`|Dieser Code zeigt nach einem Durchlauf einer Kodierprozedur an, dass keiner der vorgesehenen Codes als zutreffend angesehen wurde. Dieser Kodierfall muss dann manuell gesichtet werden.|
|`CODING_ERROR`|Während der Kodierung ist ein Fehler aufgetreten, der die Bewertung der Antwort verhindert hat. Dies kann ein technischer Fehler bei der Anzeige (Replay) für das manuelle Kodieren sein, aber auch Typkonflikte zwischen dem Wert und dem Kodierschema können die Ursache sein.|
|`CODING_COMPLETE`|Die Kodierung der Variablen ist erfolgreich abgeschlossen.|

## Status bei Ableitung

Das Kodierschema des IQB erlaubt das Definieren neuer Variablen auf der Grundlage eines Wertes oder eines Codes anderer Variablen der Unit. Diese sog. Ableitung kann nur erfolgen, wenn die Quellvariablen einen hinreichenden Status haben:

* Variablen, deren Wert (Value) in die abgeleitete Variable eingeht, müssen vor der Kodierung den Status `VALUE_CHANGED` haben. Es ist auch der Status `DISPLAYED` möglich, wenn dies bei der Quellvariablen markiert wurde.
* Variablen, deren Code oder Score in die abgeleitete Variable eingeht, müssen den Status `CODING_COMPLETE` haben.

Wenn eine oder mehrere Variablen, deren Werte oder Codes für die Ableitung verwendet werden sollen, einen abweichenden Status haben, erfolgt keine Ableitung. Ist der Status bei allen Variablen gleich, dann wird dieser übernommen. Ansonsten gelten folgende Regeln:

::: {.callout-caution}
## Reihenfolge wichtig
Die folgende Liste wird genau in dieser Reihenfolge abgearbeitet. Sobald ein Fall zutrifft, wird nicht mit der nächsten Bedingung fortgesetzt.
:::

| Bedingung | Status der abgeleiteten Variable |
|-----------|----|
| Mindestens eine der Variablen hat den Status `CODING_ERROR` | `CODING_ERROR` |
| Mindestens eine der Variablen hat den Status `CODING_COMPLETE` und mindestens eine andere einen unzulässigen Status | `INVALID` |
| Mindestens eine der Variablen hat den Status `PARTLY_DISPLAYED` oder `DISPLAYED` und mindestens eine andere `NOT_REACHED` oder `UNSET` | `PARTLY_DISPLAYED` |

# Value Types

* array<string | null>
* array<number | null>
* array<boolean | null>
* number
* string
* null
* boolean
